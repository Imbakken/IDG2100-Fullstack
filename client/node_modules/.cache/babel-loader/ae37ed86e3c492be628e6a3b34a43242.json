{"ast":null,"code":"var _jsxFileName = \"C:\\\\IDA\\\\idg2100-202-exam-delivery-folder-group-4\\\\client\\\\src\\\\utils\\\\ProtectedUserRoute.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\nimport { default as AuthContext } from \"./AuthContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let auth = useContext(AuthContext);\n  let location = useLocation();\n  let {\n    pathname\n  } = location;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [auth.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this), auth.isAuth && (children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 46\n    }, this)), !auth.isLoading && !auth.isAuth && pathname !== \"/login\" && /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProtectedRoute, \"V8aaRscMIH/H6XmbMfvLIzRcFn8=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useContext","Outlet","Navigate","useLocation","default","AuthContext","ProtectedRoute","children","auth","location","pathname","isLoading","isAuth"],"sources":["C:/IDA/idg2100-202-exam-delivery-folder-group-4/client/src/utils/ProtectedUserRoute.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Outlet, Navigate, useLocation } from \"react-router-dom\";\r\nimport { default as AuthContext } from \"./AuthContextProvider\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  let auth = useContext(AuthContext);\r\n  let location = useLocation();\r\n  let { pathname } = location;\r\n\r\n  return (\r\n    <>\r\n      {auth.isLoading && <p>Loading...</p>}\r\n      {auth.isAuth && (children ? children : <Outlet />)}\r\n      {!auth.isLoading && !auth.isAuth && pathname !== \"/login\" && (\r\n        <Navigate to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,IAAIC,WAAW,QAAQ,uBAAuB;AAAC;AAAA;AAE/D,MAAMC,cAAc,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAClC,IAAIC,IAAI,GAAGR,UAAU,CAACK,WAAW,CAAC;EAClC,IAAII,QAAQ,GAAGN,WAAW,EAAE;EAC5B,IAAI;IAAEO;EAAS,CAAC,GAAGD,QAAQ;EAE3B,oBACE;IAAA,WACGD,IAAI,CAACG,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,EACnCH,IAAI,CAACI,MAAM,KAAKL,QAAQ,GAAGA,QAAQ,gBAAG,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,EACjD,CAACC,IAAI,CAACG,SAAS,IAAI,CAACH,IAAI,CAACI,MAAM,IAAIF,QAAQ,KAAK,QAAQ,iBACvD,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QACtB;EAAA,gBACA;AAEP,CAAC;AAAC,GAdIJ,cAAc;EAAA,QAEHH,WAAW;AAAA;AAAA,KAFtBG,cAAc;AAgBpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}