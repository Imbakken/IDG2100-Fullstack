{"ast":null,"code":"var _jsxFileName = \"C:\\\\IDA\\\\idg2100-202-exam-delivery-folder-group-4\\\\client\\\\src\\\\utils\\\\AuthContextProvider.js\",\n  _s = $RefreshSig$();\n// Directly inspired by Carlos's lecture number 15 and repository  idg2100-ntnu-movies-front-end\n//Inspired by https://codesandbox.io/s/q9m26noky6?file=/src/helpers/AuthContext.js:0-638 \n\nimport { login } from \"../api/api\";\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isAuth, setIsAuth] = useState(() => {\n    const token = localStorage.getItem(\"AUTH_APP-token\");\n    const user = localStorage.getItem(\"AUTH_APP-user\");\n    if (token && user) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  let [user, setUser] = useState(() => {\n    const user = localStorage.getItem(\"AUTH_APP-user\");\n    if (user) {\n      return jwt_decode(user);\n    } else {\n      return null;\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [authTokens, setAuthTokens] = useState(() => {\n    const token = localStorage.getItem(\"AUTH_APP-token\");\n    if (token) {\n      return {\n        jwtToken: token\n      };\n    } else {\n      return null;\n    }\n  });\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.jwtToken));\n    }\n    setIsLoading(false);\n  }, [authTokens, isLoading]);\n  const loginUser = async user => {\n    const {\n      username,\n      password\n    } = user;\n    try {\n      const response = await login(username, password);\n      localStorage.setItem(\"AUTH_APP-token\", response.data);\n      localStorage.setItem(\"AUTH_APP-user\", response.data);\n      setAuthTokens({\n        jwtToken: response.data\n      });\n      setUser(jwt_decode(response.data));\n      setIsAuth(true);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n  const logoutUser = () => {\n    localStorage.removeItem(\"AUTH_APP-token\");\n    localStorage.removeItem(\"AUTH_APP-user\");\n    setAuthTokens(null);\n    setUser(null);\n    setIsAuth(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuth,\n      isLoading,\n      authTokens,\n      setAuthTokens,\n      setUser,\n      user,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"M8tn2pr7B2zEH0Kl5TnGQRumw0Y=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["login","createContext","useState","useEffect","jwt_decode","AuthContext","AuthProvider","children","isAuth","setIsAuth","token","localStorage","getItem","user","setUser","isLoading","setIsLoading","authTokens","setAuthTokens","jwtToken","loginUser","username","password","response","setItem","data","error","console","log","logoutUser","removeItem"],"sources":["C:/IDA/idg2100-202-exam-delivery-folder-group-4/client/src/utils/AuthContextProvider.js"],"sourcesContent":["// Directly inspired by Carlos's lecture number 15 and repository  idg2100-ntnu-movies-front-end\r\n//Inspired by https://codesandbox.io/s/q9m26noky6?file=/src/helpers/AuthContext.js:0-638 \r\n\r\nimport { login } from \"../api/api\";\r\nimport { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  \r\n  const [isAuth, setIsAuth] = useState(() => {\r\n    const token = localStorage.getItem(\"AUTH_APP-token\");\r\n    const user = localStorage.getItem(\"AUTH_APP-user\");\r\n    if (token && user) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  \r\n  let [user, setUser] = useState(() => {\r\n    const user = localStorage.getItem(\"AUTH_APP-user\");\r\n    if (user) {\r\n      return jwt_decode(user);\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [authTokens, setAuthTokens] = useState(() => {\r\n    const token = localStorage.getItem(\"AUTH_APP-token\");\r\n    if (token) {\r\n      return {\r\n        jwtToken: token,\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (authTokens) {\r\n      setUser(jwt_decode(authTokens.jwtToken));\r\n    }\r\n    setIsLoading(false);\r\n  }, [authTokens, isLoading]);\r\n\r\n  const loginUser = async (user) => {\r\n    const { username, password } = user;\r\n    try {\r\n      const response = await login(username, password);\r\n      localStorage.setItem(\"AUTH_APP-token\", response.data);\r\n      localStorage.setItem(\"AUTH_APP-user\", response.data);\r\n      setAuthTokens({\r\n        jwtToken: response.data,\r\n      });\r\n      setUser(jwt_decode(response.data));\r\n      setIsAuth(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    localStorage.removeItem(\"AUTH_APP-token\");\r\n    localStorage.removeItem(\"AUTH_APP-user\");\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    setIsAuth(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuth,\r\n        isLoading,\r\n        authTokens,\r\n        setAuthTokens,\r\n        setUser,\r\n        user,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}