{"ast":null,"code":"//Directly inspired by Carlos's lecture number 15 and repository  idg2100-ntnu-movies-front-end\n\nimport axios from \"./axios\";\nconst createBrew = (brewName, coffeeName, grind, water, gram, User) => axios.post(\"/api/brew\", brewName, coffeeName, grind, water, gram, User);\nconst getBrews = () => {\n  return axios.get(\"/api/brew/latest\");\n};\nconst getAllBrews = () => {\n  return axios.get(\"/api/brew\");\n};\nconst createBean = (name, brand, roastProfile, price, country, beanType, metersAboveSeaLevel, aroma) => axios.post(\"/api/bean\", {\n  name: name,\n  brand: brand,\n  roastProfile: roastProfile,\n  price: price,\n  country: country,\n  beanType: beanType,\n  metersAboveSeaLevel: metersAboveSeaLevel,\n  aroma: aroma\n});\nconst getBeans = () => {\n  return axios.get(\"/api/bean\");\n};\nconst getBean = beanId => {\n  return axios.get(`/api/bean/${beanId}`);\n};\nconst checkRating = async (userId, brewId) => {\n  return axios.get(`/api/rate/rated/${userId}/${brewId}`);\n};\nconst postRating = (brewId, userId, rating, brewName, grind, water, gram, createdAt) => {\n  axios.post(\"/api/rate\", {\n    brewId: brewId,\n    userId: userId,\n    rating: rating,\n    brewName: brewName,\n    grind: grind,\n    water: water,\n    gram: gram,\n    createdAt: createdAt\n  });\n};\nconst updateRating = (userId, brewId, rating) => {\n  axios.put(`/api/rate/${userId}/${brewId}`, {\n    rating: rating\n  });\n};\nconst fetchRatings = brewId => {\n  return axios.get(`/api/rate/average/${brewId}`);\n};\nconst fetchYourRatings = userId => {\n  return axios.get(`/api/rate/yourratings/${userId}`);\n};\nconst createUser = (username, email, password) => {\n  return axios.post(\"/api/user\", {\n    username: username,\n    email: email,\n    password: password\n  });\n};\nconst getUsers = () => {\n  return axios.get(\"/api/user\");\n};\nconst getUser = userId => {\n  return axios.get(`/api/user/${userId}`);\n};\nconst updateUser = (userId, username, email, role) => {\n  axios.patch(`/api/user/${userId}`, {\n    username: username,\n    email: email,\n    role: role\n  });\n};\nconst deleteUser = userId => {\n  axios.delete(`/api/user/${userId}`);\n};\nconst registerUser = (username, email, password) => {\n  return axios.post(\"/api/auth/register\", {\n    username: username,\n    email: email,\n    password: password\n  });\n};\nconst login = (username, password) => {\n  return axios.post(\"/api/auth/login\", {\n    username,\n    password\n  });\n};\nexport { createBrew, getBrews, getAllBrews, createBean, getBeans, getBean, checkRating, postRating, updateRating, fetchRatings, createUser, getUsers, getUser, updateUser, deleteUser, fetchYourRatings, registerUser, login };","map":{"version":3,"names":["axios","createBrew","brewName","coffeeName","grind","water","gram","User","post","getBrews","get","getAllBrews","createBean","name","brand","roastProfile","price","country","beanType","metersAboveSeaLevel","aroma","getBeans","getBean","beanId","checkRating","userId","brewId","postRating","rating","createdAt","updateRating","put","fetchRatings","fetchYourRatings","createUser","username","email","password","getUsers","getUser","updateUser","role","patch","deleteUser","delete","registerUser","login"],"sources":["C:/IDA/idg2100-202-exam-delivery-folder-group-4/client/src/api/api.js"],"sourcesContent":["//Directly inspired by Carlos's lecture number 15 and repository  idg2100-ntnu-movies-front-end\r\n\r\nimport axios from \"./axios\";\r\n\r\nconst createBrew = (brewName, coffeeName, grind, water, gram, User) =>\r\n  axios.post(\"/api/brew\", \r\n    brewName,\r\n    coffeeName,\r\n    grind,\r\n    water,\r\n    gram,\r\n    User,\r\n    );\r\n\r\nconst getBrews = () => {\r\n  return axios.get(\"/api/brew/latest\");\r\n};\r\n\r\nconst getAllBrews = () => {\r\n  return axios.get(\"/api/brew\");\r\n};\r\n\r\nconst createBean = (name, brand, roastProfile, price, country, beanType, metersAboveSeaLevel, aroma) =>\r\n  axios.post(\"/api/bean\", {\r\n    name: name,\r\n    brand: brand,\r\n    roastProfile: roastProfile,\r\n    price: price,\r\n    country: country,\r\n    beanType: beanType, \r\n    metersAboveSeaLevel: metersAboveSeaLevel,\r\n    aroma: aroma,\r\n  });\r\n\r\nconst getBeans = () => {\r\n  return axios.get(\"/api/bean\");\r\n};\r\n\r\nconst getBean = (beanId) => {\r\n  return axios.get(`/api/bean/${beanId}`);\r\n};\r\n\r\n\r\nconst checkRating = async (userId, brewId) => {\r\n  return axios.get(`/api/rate/rated/${userId}/${brewId}`);\r\n};\r\n\r\nconst postRating = (\r\n  brewId,\r\n  userId,\r\n  rating,\r\n  brewName,\r\n  grind,\r\n  water,\r\n  gram,\r\n  createdAt,\r\n) => {\r\n      axios.post(\"/api/rate\", {\r\n        brewId: brewId,\r\n        userId: userId,\r\n        rating: rating,\r\n        brewName: brewName,\r\n        grind: grind,\r\n        water: water,\r\n        gram: gram,\r\n        createdAt: createdAt,\r\n      });\r\n};\r\n\r\nconst updateRating = (userId, brewId, rating) => {\r\n  axios.put(`/api/rate/${userId}/${brewId}`, { rating: rating });\r\n};\r\n\r\nconst fetchRatings = (brewId) => {\r\n  return axios.get(`/api/rate/average/${brewId}`);\r\n};\r\n\r\nconst fetchYourRatings = (userId) => {\r\n  return axios.get(`/api/rate/yourratings/${userId}`);\r\n};\r\n\r\nconst createUser = (username, email, password) => {\r\n  return axios.post(\"/api/user\", {\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n  });\r\n};\r\n\r\nconst getUsers = () => {\r\n  return axios.get(\"/api/user\");\r\n};\r\n\r\nconst getUser = (userId) => {\r\n  return axios.get(`/api/user/${userId}`);\r\n};\r\n\r\nconst updateUser = (userId, username, email, role) => {\r\n  axios.patch(`/api/user/${userId}`, {\r\n    username: username,\r\n    email: email,\r\n    role: role,\r\n  });\r\n};\r\n\r\nconst deleteUser = (userId) => {\r\n  axios.delete(`/api/user/${userId}`);\r\n};\r\n\r\nconst registerUser = (username, email, password) => {\r\n  return axios.post(\"/api/auth/register\", {\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios.post(\"/api/auth/login\", { username, password });\r\n};\r\n\r\nexport {\r\n  createBrew,\r\n  getBrews,\r\n  getAllBrews,\r\n  createBean,\r\n  getBeans,\r\n  getBean,\r\n  checkRating,\r\n  postRating,\r\n  updateRating,\r\n  fetchRatings,\r\n  createUser,\r\n  getUsers,\r\n  getUser,\r\n  updateUser,\r\n  deleteUser,\r\n  fetchYourRatings,\r\n  registerUser,\r\n  login,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}